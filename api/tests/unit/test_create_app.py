from app.error_handlers import not_found
# Generated by CodiumAI

from flask_app import create_app
from flask import Flask, render_template


class TestCreateApp:
    #  Creates a Flask app with static and template folders
    def test_creates_app_with_folders(self):
        app = create_app()
        assert isinstance(app, Flask)
        assert app.static_folder == "static"
        assert app.template_folder == "templates"

    #  Sets strict_slashes to False in app.url_map
    def test_sets_strict_slashes_to_false(self):
        app = create_app()
        assert app.url_map.strict_slashes is False

    #  Registers blueprints for user, role, unit, class, and classrep routes
    def test_registers_blueprints(self):
        app = create_app()
        assert 'user_route' in app.blueprints
        assert 'role_route' in app.blueprints
        assert 'unit_route' in app.blueprints
        assert 'class_route' in app.blueprints
        assert 'classrep_route' in app.blueprints

    #  None
    def test_create_app(self):
        app = create_app()
        assert isinstance(app, Flask)
        assert app.static_folder == "static"
        assert app.template_folder == "templates"
        assert app.url_map.strict_slashes is False
        assert len(app.blueprints) == 5
        assert app.blueprints["user_route"].url_prefix == "/api/users"
        assert app.blueprints["role_route"].url_prefix == "/api/roles"
        assert app.blueprints["unit_route"].url_prefix == "/api/units"
        assert app.blueprints["class_route"].url_prefix == "/api/classes"
        assert app.blueprints["classrep_route"].url_prefix == "/api/classreps"
        assert len(app.error_handler_spec) == 1
        assert app.error_handler_spec[None][404] == not_found
        response = app.test_client().get("/")
        assert response.status_code == 200
        assert response.data.decode("utf-8") == render_template("index.html")

    #  Defines an index route that returns the index.html template
    def test_index_route_returns_template(self):
        app = create_app()
        client = app.test_client()

        response = client.get("/")
        assert response.status_code == 200
        assert b"index.html" in response.data

        response = client.get("/api")
        assert response.status_code == 200
        assert b"index.html" in response.data

    #  The app should have a default logger set
    def test_default_logger_set(self):
        app = create_app()
        assert app.logger is not None

    #  The app should have a name equal to the name of the module (__name__)
    def test_app_name(self):
        app = create_app()
        assert app.name == __name__

    #  The app should have a testing flag set to False by default
    def test_testing_flag_default(self):
        app = create_app()
        assert app.testing is False

    #  The app should have a default secret key set
    def test_default_secret_key(self):
        app = create_app()
        assert app.secret_key is not None
